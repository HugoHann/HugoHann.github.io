<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Docker</title>
    <link href="/2022/04/17/Docker/"/>
    <url>/2022/04/17/Docker/</url>
    
    <content type="html"><![CDATA[<h1 id="Docker-install"><a href="#Docker-install" class="headerlink" title="Docker install"></a>Docker install</h1><h2 id="Docker-Engine-overview"><a href="#Docker-Engine-overview" class="headerlink" title="Docker Engine overview"></a>Docker Engine overview</h2><p>Docker Engine is an open source containerization technology for building and containerizing your applications. Docker Engine acts as a client-server application with:</p><ol><li><p>A server with a long-running daemon process dockerd.</p></li><li><p>APIs which specify interfaces that programs can use to talk to and instruct the Docker daemon.</p></li><li><p>A command line interface (CLI) client docker.</p></li></ol><p>The CLI uses Docker APIs to control or interact with the Docker daemon through scripting or direct CLI commands. Many other Docker applications use the underlying API and CLI. The daemon creates and manage Docker objects, such as images, containers, networks, and volumes.</p><h2 id="Set-up-the-repository"><a href="#Set-up-the-repository" class="headerlink" title="Set up the repository"></a>Set up the repository</h2><h3 id="Update-the-apt-package-index-and-install-packages-to-allow-apt-to-use-a-repository-over-HTTPS"><a href="#Update-the-apt-package-index-and-install-packages-to-allow-apt-to-use-a-repository-over-HTTPS" class="headerlink" title="Update the apt package index and install packages to allow apt to use a repository over HTTPS:"></a>Update the apt package index and install packages to allow apt to use a repository over HTTPS:</h3><figure class="highlight livescript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs livescript">sudo apt-get update<br><br>sudo apt-get install <span class="hljs-string">\</span><br>   ca-certificates <span class="hljs-string">\</span><br>   curl <span class="hljs-string">\</span><br>   gnupg <span class="hljs-string">\</span><br>   lsb-release<br></code></pre></td></tr></table></figure><h3 id="Add-Docker’s-official-GPG-key"><a href="#Add-Docker’s-official-GPG-key" class="headerlink" title="Add Docker’s official GPG key"></a>Add Docker’s official GPG key</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -fsSL \<br>https:<span class="hljs-regexp">//</span>download.docker.com<span class="hljs-regexp">/linux/u</span>buntu/gpg | \<br>sudo gpg --dearmor \<br>-o <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/keyrings/</span>docker-archive-keyring.gpg<br></code></pre></td></tr></table></figure><h3 id="Use-the-following-command-to-set-up-the-stable-repository-To-add-the-nightly-or-test-repository-add-the-word-nightly-or-test-or-both-after-the-word-stable-in-the-commands-below"><a href="#Use-the-following-command-to-set-up-the-stable-repository-To-add-the-nightly-or-test-repository-add-the-word-nightly-or-test-or-both-after-the-word-stable-in-the-commands-below" class="headerlink" title="Use the following command to set up the stable repository. To add the nightly or test repository, add the word nightly or test (or both) after the word stable in the commands below."></a>Use the following command to set up the stable repository. To add the nightly or test repository, add the word nightly or test (or both) after the word stable in the commands below.</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle"> echo \<br><span class="hljs-string">&quot;deb [arch=$(dpkg --print-architecture) \</span><br><span class="hljs-string">signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \</span><br><span class="hljs-string">https://download.docker.com/linux/ubuntu \</span><br><span class="hljs-string">$(lsb_release -cs) stable&quot;</span> | \<br>sudo tee <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/</span>docker.list &gt; <span class="hljs-regexp">/dev/</span><span class="hljs-keyword">null</span><br></code></pre></td></tr></table></figure><h2 id="Install-Docker-Engine"><a href="#Install-Docker-Engine" class="headerlink" title="Install Docker Engine"></a>Install Docker Engine</h2><h3 id="Update-the-apt-package-index-and-install-the-latest-version-of-Docker-Engine-and-containerd-or-go-to-the-next-step-to-install-a-specific-version"><a href="#Update-the-apt-package-index-and-install-the-latest-version-of-Docker-Engine-and-containerd-or-go-to-the-next-step-to-install-a-specific-version" class="headerlink" title="Update the apt package index, and install the latest version of Docker Engine and containerd, or go to the next step to install a specific version:"></a>Update the apt package index, and install the latest version of Docker Engine and containerd, or go to the next step to install a specific version:</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo apt-<span class="hljs-built_in">get</span> <span class="hljs-keyword">update</span><br>sudo apt-<span class="hljs-built_in">get</span> install docker-<span class="hljs-keyword">ce</span> docker-<span class="hljs-keyword">ce</span>-cli containerd.io<br></code></pre></td></tr></table></figure><p>验证安装，如图<img src="/img/ass8/4.png" alt="验证Docker">。</p><p>这里已经安装好Docker，可以先从docker hub拉镜像，然后启动容器，这里因为已经以前安装并使用过，就直接那一个容器作为结果演示，如图<img src="/img/ass8/0.png" alt="Docker镜像">。</p><p>可以看到有很多镜像，如图<img src="/img/ass8/1.png" alt="Docker容器">。</p><p>可以看到每个容器以及对应的镜像，如图<img src="/img/ass8/2.png" alt="启动镜像">。</p><p>启动并连接镜像，如图<img src="/img/ass8/3.png" alt="环境隔离">。</p><p>可以看到docker内外CUDA版本不一样，如图，Docker作为虚拟容器，起到了隔离环境的效果，并且docker的隔离比conda更为彻底，又不需要重新安装虚拟机那么麻烦。</p>]]></content>
    
    
    <categories>
      
      <category>Installation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CloudFoundry</title>
    <link href="/2022/04/10/CloudFoundry/"/>
    <url>/2022/04/10/CloudFoundry/</url>
    
    <content type="html"><![CDATA[<h1 id="Cloud-Foundry部署"><a href="#Cloud-Foundry部署" class="headerlink" title="Cloud Foundry部署"></a>Cloud Foundry部署</h1><h2 id="What’s-Cloud-Foundry"><a href="#What’s-Cloud-Foundry" class="headerlink" title="What’s Cloud Foundry?"></a>What’s Cloud Foundry?</h2><p>Cloud Foundry is an open-source platform as a service (PaaS) that provides you with a choice of clouds, developer frameworks, and application services.</p><p>Cloud Foundry is promoted for continuous delivery as it supports the full application development lifecycle, from initial development through all testing stages to deployment. Cloud Foundry’s container-based architecture runs apps in any programming language over a variety of cloud service providers. This multi-cloud environment allows developers to use the cloud platform that suits specific application workloads and move those workloads as necessary within minutes with no changes to the application.</p><p>Applications deployed to Cloud Foundry access external resources via an Open Service Broker API.</p><p>In a platform, all external dependencies such as databases, messaging systems, file systems and so on are considered services. Cloud Foundry allows administrators to create a marketplace of services, from which users can provision these services on-demand. When an application is pushed to Cloud Foundry the services it needs may also be specified. This process puts the credentials in an environment variable.</p><p>The software was originally developed by VMware, transferred to Pivotal Software (a joint venture by EMC, VMware and General Electric), who then transferred the software to the Cloud Foundry Foundation upon its inception in 2015.</p><h2 id="Cloud-Foundry-Command-Line-Interface-Installation"><a href="#Cloud-Foundry-Command-Line-Interface-Installation" class="headerlink" title="Cloud Foundry Command Line Interface Installation"></a>Cloud Foundry Command Line Interface Installation</h2><h3 id="找到Cloud-Foundry的官网，按照指示安装，如图"><a href="#找到Cloud-Foundry的官网，按照指示安装，如图" class="headerlink" title="找到Cloud Foundry的官网，按照指示安装，如图"></a>找到Cloud Foundry的官网，按照指示安装，如图</h3><p><img src="/img/cloudfoundry/0.png" alt="Cloud Foundry安装指南"></p><h3 id="结果截图，安装很快，如图"><a href="#结果截图，安装很快，如图" class="headerlink" title="结果截图，安装很快，如图"></a>结果截图，安装很快，如图</h3><p><img src="/img/cloudfoundry/1.png" alt="安装Cloud Foundry"></p><h3 id="然后验证安装，查看帮助文档，如图"><a href="#然后验证安装，查看帮助文档，如图" class="headerlink" title="然后验证安装，查看帮助文档，如图"></a>然后验证安装，查看帮助文档，如图</h3><p><img src="/img/cloudfoundry/2.png" alt="验证Cloud Foundry"></p><h3 id="最后简单部署使用一下，但是因为没有账号所以只能尝试以下，证明安装完毕，如图"><a href="#最后简单部署使用一下，但是因为没有账号所以只能尝试以下，证明安装完毕，如图" class="headerlink" title="最后简单部署使用一下，但是因为没有账号所以只能尝试以下，证明安装完毕，如图"></a>最后简单部署使用一下，但是因为没有账号所以只能尝试以下，证明安装完毕，如图</h3><p><img src="/img/cloudfoundry/3.png" alt="部署Cloud Foundry"></p>]]></content>
    
    
    <categories>
      
      <category>Installation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Installation</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenStack Installation</title>
    <link href="/2022/04/02/OpenStack-Installation/"/>
    <url>/2022/04/02/OpenStack-Installation/</url>
    
    <content type="html"><![CDATA[<h1 id="OpenStack安装与部署"><a href="#OpenStack安装与部署" class="headerlink" title="OpenStack安装与部署"></a>OpenStack安装与部署</h1><h2 id="按照官网的安装教程安装：ubuntu-openstack-install。"><a href="#按照官网的安装教程安装：ubuntu-openstack-install。" class="headerlink" title="按照官网的安装教程安装：ubuntu openstack install。"></a>按照官网的安装教程安装：<a href="https://ubuntu.com/openstack/install">ubuntu openstack install</a>。</h2><h3 id="选择Single-node-OpenStack-deployment"><a href="#选择Single-node-OpenStack-deployment" class="headerlink" title="选择Single-node OpenStack deployment"></a>选择Single-node OpenStack deployment</h3><h3 id="MicroStack-‐-OpenStack-in-a-snap-MicroStack-is-a-pure-upstream-OpenStack-distribution-designed-for-small-scale-and-edge-deployments-that-can-be-installed-and-maintained-with-a-minimal-effort"><a href="#MicroStack-‐-OpenStack-in-a-snap-MicroStack-is-a-pure-upstream-OpenStack-distribution-designed-for-small-scale-and-edge-deployments-that-can-be-installed-and-maintained-with-a-minimal-effort" class="headerlink" title="MicroStack ‐ OpenStack in a snap, MicroStack is a pure upstream OpenStack distribution designed for small scale and edge deployments, that can be installed and maintained with a minimal effort."></a>MicroStack ‐ OpenStack in a snap, MicroStack is a pure upstream OpenStack distribution designed for small scale and edge deployments, that can be installed and maintained with a minimal effort.</h3><h3 id="首先安装MicroStack"><a href="#首先安装MicroStack" class="headerlink" title="首先安装MicroStack"></a>首先安装MicroStack</h3><figure class="highlight brainfuck"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">sudo snap install microstack </span>--<span class="hljs-comment">beta</span> --<span class="hljs-comment">devmode</span><br></code></pre></td></tr></table></figure><p>可以看到安装成功，如图<br><img src="/img/openstack/4.png" alt="安装MicroStack"></p><h3 id="然后进行Initialisation"><a href="#然后进行Initialisation" class="headerlink" title="然后进行Initialisation"></a>然后进行Initialisation</h3><p>The initialisation step automatically deploys, configures, and starts OpenStack services. In particular, it will create the database, networks, an image, several flavors, and ICMP/SSH security groups.</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">sudo</span> <span class="hljs-comment">microstack</span> <span class="hljs-comment">init</span> --<span class="hljs-comment">auto</span> --<span class="hljs-comment">control</span><br></code></pre></td></tr></table></figure><p>可以看到初始化完成，如图<br><img src="/img/openstack/5.png" alt="进行Initialisation"></p><h3 id="然后验证OpenStack"><a href="#然后验证OpenStack" class="headerlink" title="然后验证OpenStack"></a>然后验证OpenStack</h3><p>The purpose of the verification step is to confirm that the cloud is in working order and to discover some of the defaults used by MicroStack. Verification will consist of the following actions:</p><ol><li>perform various OpenStack queries</li><li>create an instance</li><li>connect to the instance over SSH</li><li>access the cloud dashboard</li></ol><p>首先查看一下信息，如图<br><img src="/img/openstack/3.png" alt="Query OpenStack"></p><p>可以看到现有的project，image和flavor</p><h3 id="然后创建一个实例"><a href="#然后创建一个实例" class="headerlink" title="然后创建一个实例"></a>然后创建一个实例</h3><p>Create an instance<br>MicroStack comes with a convenient instance creation command called microstack launch. It uses the following defaults for its instances:</p><ol><li>keypair ‘microstack’</li><li>flavor ‘m1.tiny’</li><li>floating IP address on subnet</li></ol><p>基于cirros镜像创建一个名为cc的实例：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">microstack <span class="hljs-built_in">launch</span> cirros -n cc<br></code></pre></td></tr></table></figure><br>查看实例，如图：<br><img src="/img/openstack/2.png" alt="Create an instance"></p><p>Note:<br>The launch command can be replaced with the traditional microstack.openstack server create command.</p><h3 id="最后连接实例"><a href="#最后连接实例" class="headerlink" title="最后连接实例"></a>最后连接实例</h3><p>Connect to the instance<br>Output from the microstack launch command includes all the information needed to connect to the instance over SSH，如图:<br><img src="/img/openstack/1.png" alt="Connect to the instance"></p><p>Access the cloud dashboard<br>You can log in to the web UI by pointing your browser to the following URL:</p><p>The username is ‘admin’ and the password is obtained in this way:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">sudo snap get microstack config.credentials.keystone-password<br></code></pre></td></tr></table></figure></p><p>ssh连接，如图：<br><img src="/img/openstack/6.png" alt="SSH Connection"></p><p>Web连接，如图：<br><img src="/img/openstack/7.png" alt="Web Connection1"><br><img src="/img/openstack/8.png" alt="Web Connection2"><br><img src="/img/openstack/9.png" alt="Web Connection3"></p>]]></content>
    
    
    <categories>
      
      <category>Installation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Installation</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CloudComputing2022 hw2</title>
    <link href="/2022/03/20/CloudComputing2022-hw2/"/>
    <url>/2022/03/20/CloudComputing2022-hw2/</url>
    
    <content type="html"><![CDATA[<h1 id="云计算技术2022-作业二"><a href="#云计算技术2022-作业二" class="headerlink" title="云计算技术2022 作业二"></a>云计算技术2022 作业二</h1><h1 id="2-1-列举威胁作用者有哪些，并简要说明。"><a href="#2-1-列举威胁作用者有哪些，并简要说明。" class="headerlink" title="2-1 列举威胁作用者有哪些，并简要说明。"></a>2-1 列举威胁作用者有哪些，并简要说明。</h1><p>威胁作用者是引发威胁的实体，因为与它能够实施攻击。可能来自内部或外部，可能来自于人或软件程序。如下图所示：<br><img src="/img/e1.png" alt="threat agent" title="安全策略和安全机制如何用来应对威胁作用者造成的威胁、漏洞和风险"></p><p>威胁作用者主要包括：</p><h3 id="匿名攻击者"><a href="#匿名攻击者" class="headerlink" title="匿名攻击者"></a>匿名攻击者</h3><p>匿名攻击者是云中没有权限、不被信任的云服务用户。它通常是一个外部软件程序，通过公网发动网络攻击。当匿名攻击者对安全策略和防护所致有限时，这会抑制它们形成有效攻击的能力。匿名攻击者往往诉诸绕过账号或窃取用户证书的手段，同时使用能够确保匿名性或需要大量资源才能被检举的方法。</p><h3 id="恶意服务作用者"><a href="#恶意服务作用者" class="headerlink" title="恶意服务作用者"></a>恶意服务作用者</h3><p>恶意服务作用者能截取并转发云内的网络流量。它通常是带有被损害的或恶意逻辑的服务代理或伪装成服务代理的程序，也有可能是能够远程截取并破坏消息内容的外部程序。</p><h3 id="授信的攻击者"><a href="#授信的攻击者" class="headerlink" title="授信的攻击者"></a>授信的攻击者</h3><p>授信的攻击者又称恶意租户，与同意云环境中的云用户共享IT资源，试图利用合法的证书来把云提供者以及它们共享IT资源的云租户作为攻击目标。授信的攻击者通过滥用合法的证书、挪用敏感和保密的信息，在云的信任边界内部发动攻击，恶意租户也能够使用基于云的IT资源做很多非法之用，包括非法入侵认证薄弱的进程、破解加密、往电子邮件帐号发送垃圾邮件、发起拒绝服务等常见的攻击等。</p><h3 id="恶意的内部人员"><a href="#恶意的内部人员" class="headerlink" title="恶意的内部人员"></a>恶意的内部人员</h3><p>恶意的内部人员是人为的威胁作用者，它们的行为代表云提供者，或者与之有关。他们通常是现任或前任雇员，或是能够访问云提供者资源范围的第三方。这种类型的威胁作用者会带来极大的破坏可能性，因为恶意的内部人员可能拥有访问云用户IT资源的管理特权。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>匿名攻击者是不被信任的威胁作用者，通常试图从云边界的外部进行攻击；<br>恶意服务作用者截取网络通信，试图恶意地使用或篡改数据；<br>授信的攻击者是经过授权的云服务用户，具有合法的证书，他们会使用这些证书来访问基于云的IT资源；<br>恶意的内部人员是试图滥用对云资源范围的访问特权的人。</p><h1 id="2-2-列举云安全威胁有哪些，并简要说明。"><a href="#2-2-列举云安全威胁有哪些，并简要说明。" class="headerlink" title="2-2 列举云安全威胁有哪些，并简要说明。"></a>2-2 列举云安全威胁有哪些，并简要说明。</h1><h3 id="流量窃听-traffic-eavesdropping"><a href="#流量窃听-traffic-eavesdropping" class="headerlink" title="流量窃听(traffic eavesdropping)"></a>流量窃听(traffic eavesdropping)</h3><p>指当数据在传输到云中或在云内部传输时（通常是从云用户到云提供者），被恶意的服务作用者被动的截获，用于非法的信息收集。由于这种攻击被动的性质，其更容易长时间进行而不被发现。</p><h3 id="恶意媒介-malicious-intermediate"><a href="#恶意媒介-malicious-intermediate" class="headerlink" title="恶意媒介(malicious intermediate)"></a>恶意媒介(malicious intermediate)</h3><p>指消息被恶意服务作用者截获并篡改，因此可能会破坏消息的保密性和完整性。它还有可能在把消息转发到目的地之前插入有害数据。</p><h3 id="拒绝服务-DoS"><a href="#拒绝服务-DoS" class="headerlink" title="拒绝服务(DoS)"></a>拒绝服务(DoS)</h3><p>攻击的目标是使IT资源过载至无法正确运行，发起形式包括：<br>云服务上的负载由于伪造的消息或重复的通信请求不正常的增加。网络流量过载，降低了响应性，性能下降。发出多个云服务请求，每个请求都设计成消耗过量的内存和处理资源。</p><h3 id="授权不足"><a href="#授权不足" class="headerlink" title="授权不足"></a>授权不足</h3><p>是指错误的授予了攻击者访问权限，或是授权太广泛，导致攻击者能访问本应该受到保护的IT资源。这种攻击的一种变种称为弱认证，如果用弱密码或共享账户来保护IT资源，就可能导致这种攻击。</p><h3 id="虚拟化攻击"><a href="#虚拟化攻击" class="headerlink" title="虚拟化攻击"></a>虚拟化攻击</h3><p>利用虚拟化平台的漏洞来危害虚拟化平台的保密性、完整性和可用性。</p><h3 id="信任边界重叠"><a href="#信任边界重叠" class="headerlink" title="信任边界重叠"></a>信任边界重叠</h3><p>如果云中的物理IT资源是由不同的云服务共享的，那么这些云服务的信任边界是重叠的，意图损害其他共享同样信任边界的云服务用户或IT资源。</p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><p>流量窃听和恶意媒介攻击通常是由截取网络流量的恶意服务作用者实施的；<br>拒绝服务攻击的发生是当目标IT资源由于请求过多而负载过重，这些请求意在使IT资源性能陷入瘫痪或不可用；<br>授权不足攻击是指错误的授予了攻击者访问权限或是授权太宽泛，或是使用了弱密码；<br>虚拟化攻击利用的是虚拟化环境的漏洞，获得了对底层物理硬件未被授权的访问；<br>重叠的信任边界潜藏了一种威胁，攻击者可以利用多个云用户共享的、基于云的IT资源。</p>]]></content>
    
    
    <categories>
      
      <category>CloudComputing2022</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Cloud Computing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>h5py</title>
    <link href="/2022/03/14/h5py/"/>
    <url>/2022/03/14/h5py/</url>
    
    <content type="html"><![CDATA[<p>An HDF5 file is a container for two kinds of objects: datasets, which are array-like collections of data, and groups, which are folder-like containers that hold datasets and other groups. The most fundamental thing to remember when using h5py is:</p><p>Groups work like dictionaries, and datasets work like NumPy arrays</p><h3 id="Read-hdf5-h5-files"><a href="#Read-hdf5-h5-files" class="headerlink" title="Read .hdf5/.h5 files"></a>Read .hdf5/.h5 files</h3><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> h5py<br><span class="hljs-meta">&gt;&gt;&gt; </span>f = h5py.File(<span class="hljs-string">&#x27;mytestfile.hdf5&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br></code></pre></td></tr></table></figure><p>The File object is your starting point. What is stored in this file? Remember h5py.File acts like a Python dictionary, thus we can check the keys,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">list</span>(f.keys())<br>[<span class="hljs-string">&#x27;mydataset&#x27;</span>]<br></code></pre></td></tr></table></figure><p>The object we obtained isn’t an array, but an HDF5 dataset. Like NumPy arrays, datasets have both a shape and a data type:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>dset.shape<br>(<span class="hljs-number">100</span>,)<br><span class="hljs-meta">&gt;&gt;&gt; </span>dset.dtype<br>dtype(<span class="hljs-string">&#x27;int32&#x27;</span>)<br><span class="hljs-comment"># They also support array-style slicing. This is how you read and write data from a dataset in the file:</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>dset[...] = np.arange(<span class="hljs-number">100</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>dset[<span class="hljs-number">0</span>]<br><span class="hljs-number">0</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>dset[<span class="hljs-number">10</span>]<br><span class="hljs-number">10</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>dset[<span class="hljs-number">0</span>:<span class="hljs-number">100</span>:<span class="hljs-number">10</span>]<br>array([ <span class="hljs-number">0</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">50</span>, <span class="hljs-number">60</span>, <span class="hljs-number">70</span>, <span class="hljs-number">80</span>, <span class="hljs-number">90</span>])<br></code></pre></td></tr></table></figure><h3 id="Write-hdf5-h5-files"><a href="#Write-hdf5-h5-files" class="headerlink" title="Write .hdf5/.h5 files"></a>Write .hdf5/.h5 files</h3><p>At this point, you may wonder how mytestdata.hdf5 is created. We can create a file by setting the mode to w when the File object is initialized. Some other modes are a (for read/write/create access), and r+ (for read/write access).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> h5py<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-meta">&gt;&gt;&gt; </span>f = h5py.File(<span class="hljs-string">&quot;mytestfile.hdf5&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>)<br></code></pre></td></tr></table></figure><p>The File object has a couple of methods which look interesting. One of them is create_dataset, which as the name suggests, creates a data set of given shape and dtype</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>dset = f.create_dataset(<span class="hljs-string">&quot;mydataset&quot;</span>, (<span class="hljs-number">100</span>,), dtype=<span class="hljs-string">&#x27;i&#x27;</span>)<br></code></pre></td></tr></table></figure><p>The File object is a context manager; so the following code works too</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> h5py<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">with</span> h5py.File(<span class="hljs-string">&quot;mytestfile.hdf5&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f:<br><span class="hljs-meta">&gt;&gt;&gt; </span>    dset = f.create_dataset(<span class="hljs-string">&quot;mydataset&quot;</span>, (<span class="hljs-number">100</span>,), dtype=<span class="hljs-string">&#x27;i&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="Reading-example-with-h5py-2-9"><a href="#Reading-example-with-h5py-2-9" class="headerlink" title="Reading example (with h5py==2.9)"></a>Reading example (with h5py==2.9)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> h5py<br><span class="hljs-keyword">from</span> h5py <span class="hljs-keyword">import</span> Dataset, Group, File<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>f = h5py.File(<span class="hljs-string">&#x27;PUGAN_poisson_256_poisson_1024.h5&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br><span class="hljs-built_in">print</span>(f.keys())<br><span class="hljs-comment"># &lt;KeysViewHDF5 [&#x27;poisson_1024&#x27;, &#x27;poisson_256&#x27;]&gt;</span><br>p256=f[<span class="hljs-string">&#x27;poisson_256&#x27;</span>]<br>p1024=f[<span class="hljs-string">&#x27;poisson_1024&#x27;</span>]<br><span class="hljs-built_in">print</span>(p256.shape,p1024.shape)<br><span class="hljs-built_in">print</span>(p256.value)<br><span class="hljs-comment"># (24000, 256, 3) (24000, 1024, 3)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">[[[ -0.07107    1.54135   -1.327173]</span><br><span class="hljs-string">  [ -0.512117  -0.410398   0.134543]</span><br><span class="hljs-string">  [  0.137435   0.697742   0.286036]</span><br><span class="hljs-string">  ...</span><br><span class="hljs-string">  [ -5.215001   7.463724   1.873999]</span><br><span class="hljs-string">  [ -7.951387   1.839743   1.807378]</span><br><span class="hljs-string">  [ -0.972066 -13.259521  -0.414962]]]</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-comment"># restore some data into csv file</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>pd.DataFrame(p256[<span class="hljs-number">0</span>]).to_csv(<span class="hljs-string">&#x27;sample256.csv&#x27;</span>,index=<span class="hljs-literal">False</span>, sep=<span class="hljs-string">&#x27; &#x27;</span>)<br>pd.DataFrame(p1024[<span class="hljs-number">0</span>]).to_csv(<span class="hljs-string">&#x27;sample1024.csv&#x27;</span>,index=<span class="hljs-literal">False</span>, sep=<span class="hljs-string">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="Writing-example"><a href="#Writing-example" class="headerlink" title="Writing example"></a>Writing example</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> plyfile <span class="hljs-keyword">import</span> PlyData, PlyElement<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> h5py<br><span class="hljs-keyword">from</span> h5py <span class="hljs-keyword">import</span> Dataset, Group, File<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">random_sampling</span>(<span class="hljs-params">pointcloud,K=<span class="hljs-number">2048</span></span>):<br>    N = pointcloud.shape[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">if</span> N &gt;= K:<br>        idx = np.random.choice(N, K)<br>        <span class="hljs-keyword">return</span> pointcloud[idx]<br>    <span class="hljs-keyword">else</span>:<br>        idx = np.random.choice(np.arange(N), K-N)<br>        expand_data = pointcloud[idx]<br>        pointcloud = np.concatenate((pointcloud, expand_data), <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> pointcloud<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read_ply</span>(<span class="hljs-params">file_dir</span>):<br>      <span class="hljs-comment">#文件的路径</span><br>    plydata = PlyData.read(file_dir)  <span class="hljs-comment"># 读取文件</span><br>    data = plydata.elements[<span class="hljs-number">0</span>].data  <span class="hljs-comment"># 读取数据</span><br>    data_pd = pd.DataFrame(data)  <span class="hljs-comment"># 转换成DataFrame, 因为DataFrame可以解析结构化的数据</span><br>    data_np = np.zeros(data_pd.shape, dtype=np.<span class="hljs-built_in">float</span>)  <span class="hljs-comment"># 初始化储存数据的array</span><br>    property_names = data[<span class="hljs-number">0</span>].dtype.names  <span class="hljs-comment"># 读取property的名字</span><br>    <span class="hljs-keyword">for</span> i, name <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(property_names):  <span class="hljs-comment"># 按property读取数据，这样可以保证读出的数据是同样的数据类型。</span><br>        data_np[:, i] = data_pd[name]<br>    <span class="hljs-keyword">if</span> data_np.shape[<span class="hljs-number">1</span>]&gt;<span class="hljs-number">3</span>:<br>        data_np=data_np[:,:<span class="hljs-number">3</span>]<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;PLY FILE &quot;</span>,file_dir,<span class="hljs-string">&quot; result shape: &quot;</span>, data_np.shape)<br>    <span class="hljs-keyword">return</span> data_np<br><br>d0=read_ply(<span class="hljs-string">&#x27;longdress_vox10_1051.ply&#x27;</span>)<br>d0_2k=random_sampling(d0)<br><span class="hljs-built_in">print</span>(d0_2k.shape)<br><span class="hljs-comment"># PLY FILE  longdress_vox10_1051.ply  result shape:  (765821, 3)</span><br><span class="hljs-comment"># (2048, 3)</span><br>d=np.expand_dims(d0_2k,axis=<span class="hljs-number">0</span>)<br>d=np.concatenate([d,d],axis=<span class="hljs-number">0</span>)<br><span class="hljs-built_in">print</span>(d)<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">[[[261.  51. 110.]</span><br><span class="hljs-string">  [256. 544. 226.]</span><br><span class="hljs-string">  [266.  35. 122.]</span><br><span class="hljs-string">  ...</span><br><span class="hljs-string">  [270. 143.  83.]</span><br><span class="hljs-string">  [252. 285. 147.]</span><br><span class="hljs-string">  [197. 521.  47.]]</span><br><span class="hljs-string"></span><br><span class="hljs-string"> [[261.  51. 110.]</span><br><span class="hljs-string">  [256. 544. 226.]</span><br><span class="hljs-string">  [266.  35. 122.]</span><br><span class="hljs-string">  ...</span><br><span class="hljs-string">  [270. 143.  83.]</span><br><span class="hljs-string">  [252. 285. 147.]</span><br><span class="hljs-string">  [197. 521.  47.]]]</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>f=h5py.File(<span class="hljs-string">&quot;myh5py.hdf5&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>)<br>d1=f.create_dataset(<span class="hljs-string">&quot;dset1&quot;</span>,data=d)<br>d2=f.create_dataset(<span class="hljs-string">&quot;dset2&quot;</span>,data=d)<br>f1 = h5py.File(<span class="hljs-string">&#x27;myh5py.hdf5&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br><br><span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> f1.keys():<br>    <span class="hljs-built_in">print</span>(key)<br>f1_d=f1[<span class="hljs-string">&#x27;dset1&#x27;</span>]<br>f2_d=f1[<span class="hljs-string">&#x27;dset2&#x27;</span>]<br><span class="hljs-built_in">print</span>(f1_d.value)<br><span class="hljs-built_in">print</span>(f2_d.shape)<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">dset1</span><br><span class="hljs-string">dset2</span><br><span class="hljs-string">[[[321. 685. 184.]</span><br><span class="hljs-string">  [191. 742.  62.]</span><br><span class="hljs-string">  [240. 307. 199.]</span><br><span class="hljs-string">  ...</span><br><span class="hljs-string">  [299. 603. 195.]</span><br><span class="hljs-string">  [272. 789. 173.]</span><br><span class="hljs-string">  [146. 824. 155.]]</span><br><span class="hljs-string"></span><br><span class="hljs-string"> [[321. 685. 184.]</span><br><span class="hljs-string">  [191. 742.  62.]</span><br><span class="hljs-string">  [240. 307. 199.]</span><br><span class="hljs-string">  ...</span><br><span class="hljs-string">  [299. 603. 195.]</span><br><span class="hljs-string">  [272. 789. 173.]</span><br><span class="hljs-string">  [146. 824. 155.]]]</span><br><span class="hljs-string">(2, 2048, 3)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Point Cloud</category>
      
    </categories>
    
    
    <tags>
      
      <tag>h5py</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Open3D</title>
    <link href="/2022/03/14/Open3d/"/>
    <url>/2022/03/14/Open3d/</url>
    
    <content type="html"><![CDATA[<h3 id="Visualize-point-cloud"><a href="#Visualize-point-cloud" class="headerlink" title="Visualize point cloud"></a>Visualize point cloud</h3><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Load a ply point cloud, print it, and render it&quot;</span>)<br>ply_point_cloud = o3d.data.PLYPointCloud()<br>pcd = o3d.io.read_point_cloud(ply_point_cloud.path)<br><span class="hljs-built_in">print</span>(pcd)<br><span class="hljs-built_in">print</span>(np.asarray(pcd.points)) <span class="hljs-comment"># to numpy array</span><br>o3d.visualization.draw_geometries([pcd],<br>                                  zoom=<span class="hljs-number">0.3412</span>,<br>                                  front=[<span class="hljs-number">0.4257</span>, -<span class="hljs-number">0.2125</span>, -<span class="hljs-number">0.8795</span>],<br>                                  lookat=[<span class="hljs-number">2.6172</span>, <span class="hljs-number">2.0475</span>, <span class="hljs-number">1.532</span>],<br>                                  up=[-<span class="hljs-number">0.0694</span>, -<span class="hljs-number">0.9768</span>, <span class="hljs-number">0.2024</span>])<br></code></pre></td></tr></table></figure><p>使用-，+号可以调整点的大小</p><h3 id="Voxel-downsampling"><a href="#Voxel-downsampling" class="headerlink" title="Voxel downsampling"></a>Voxel downsampling</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Downsample the point cloud with a voxel of 0.05&quot;</span>)<br>downpcd = pcd.voxel_down_sample(voxel_size=<span class="hljs-number">0.05</span>)<br>o3d.visualization.draw_geometries([downpcd],<br>                                  zoom=<span class="hljs-number">0.3412</span>,<br>                                  front=[<span class="hljs-number">0.4257</span>, -<span class="hljs-number">0.2125</span>, -<span class="hljs-number">0.8795</span>],<br>                                  lookat=[<span class="hljs-number">2.6172</span>, <span class="hljs-number">2.0475</span>, <span class="hljs-number">1.532</span>],<br>                                  up=[-<span class="hljs-number">0.0694</span>, -<span class="hljs-number">0.9768</span>, <span class="hljs-number">0.2024</span>])<br></code></pre></td></tr></table></figure><h3 id="Random-downsampling"><a href="#Random-downsampling" class="headerlink" title="Random downsampling"></a>Random downsampling</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">random_down_sample(self, sampling_ratio)<br></code></pre></td></tr></table></figure><p>sampling_ratio (float) – Sampling ratio, the ratio of number of selected points to total number of points[0-1].</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> open3d <span class="hljs-keyword">as</span> o3d<br>pcd = o3d.io.read_point_cloud(<span class="hljs-string">&#x27;longdress_vox10_1051.ply&#x27;</span>)<br><span class="hljs-built_in">print</span>(pcd)<br>downpcd = pcd.voxel_down_sample(voxel_size=<span class="hljs-number">2.0</span>)<br><span class="hljs-built_in">print</span>(downpcd)<br>xyz_load = np.asarray(downpcd.points)<br><span class="hljs-built_in">print</span>(xyz_load.shape)<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">Jupyter environment detected. Enabling Open3D WebVisualizer.</span><br><span class="hljs-string">[Open3D INFO] WebRTC GUI backend enabled.</span><br><span class="hljs-string">[Open3D INFO] WebRTCWindowSystem: HTTP handshake server disabled.</span><br><span class="hljs-string">PointCloud with 765821 points.</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>downpcd = pcd.voxel_down_sample(voxel_size=<span class="hljs-number">4.0</span>)<br><span class="hljs-built_in">print</span>(downpcd)<br><span class="hljs-comment"># PointCloud with 55474 points.</span><br>xyz_load = np.asarray(downpcd.points)<br><span class="hljs-built_in">print</span>(xyz_load.shape)<br><span class="hljs-comment"># (55474, 3)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Point Cloud</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Open3D使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CloudComputing2022 hw1</title>
    <link href="/2022/03/13/CloudComputing2022%20hw1/"/>
    <url>/2022/03/13/CloudComputing2022%20hw1/</url>
    
    <content type="html"><![CDATA[<h1 id="云计算技术2022-作业一"><a href="#云计算技术2022-作业一" class="headerlink" title="云计算技术2022 作业一"></a>云计算技术2022 作业一</h1><h1 id="1-1-云使能技术包括哪些技术组件？用一句话简要说明其关键特征"><a href="#1-1-云使能技术包括哪些技术组件？用一句话简要说明其关键特征" class="headerlink" title="1-1 云使能技术包括哪些技术组件？用一句话简要说明其关键特征"></a>1-1 云使能技术包括哪些技术组件？用一句话简要说明其关键特征</h1><h3 id="宽带网络和Internet架构："><a href="#宽带网络和Internet架构：" class="headerlink" title="宽带网络和Internet架构："></a>宽带网络和Internet架构：</h3><p>Internet以无中心的供给和管理模型为基础，不受任何集中式实体的控制。主要组件是使用网络路由器和交互机的无连接分组交换与基于路由器的互联。</p><h3 id="数据中心技术："><a href="#数据中心技术：" class="headerlink" title="数据中心技术："></a>数据中心技术：</h3><p>数据中心是专门的IT基础设施，用于集中存放IT资源，应当可以远程操作，具有高可用性。</p><h3 id="虚拟化技术："><a href="#虚拟化技术：" class="headerlink" title="虚拟化技术："></a>虚拟化技术：</h3><p>服务器虚拟化是指利用虚拟化软件将IT硬件抽象为虚拟服务器，具有硬件无关性，有多种层次的虚拟化技术。</p><h3 id="Web技术："><a href="#Web技术：" class="headerlink" title="Web技术："></a>Web技术：</h3><p>常用语云服务的实现，基本技术包括URL、HTTP、HTML和XML，具有极大灵活性。</p><h3 id="多租户技术："><a href="#多租户技术：" class="headerlink" title="多租户技术："></a>多租户技术：</h3><p>类似于将软件虚拟化，每个租户意识不到其他租户的存在，可提高安全性，便于计费。</p><h3 id="服务技术："><a href="#服务技术：" class="headerlink" title="服务技术："></a>服务技术：</h3><p>由Web服务，服务代理，服务中间件组成，规范和简化了云服务的部署。</p><h1 id="1-2-列举至少-3-种虚拟化软件，并用一句话概括其特点。"><a href="#1-2-列举至少-3-种虚拟化软件，并用一句话概括其特点。" class="headerlink" title="1-2 列举至少 3 种虚拟化软件，并用一句话概括其特点。"></a>1-2 列举至少 3 种虚拟化软件，并用一句话概括其特点。</h1><h3 id="Openvz："><a href="#Openvz：" class="headerlink" title="Openvz："></a>Openvz：</h3><p>开源，基于linux 虚拟机和宿主机共用一个内核</p><h3 id="VirtualBox："><a href="#VirtualBox：" class="headerlink" title="VirtualBox："></a>VirtualBox：</h3><p>开源，把一台物理计算机虚拟成多台逻辑计算机，每个逻辑计算机里面可以运行不同的操作系统，相互不受影响，实现对于硬件资源的充分利用</p><h3 id="Docker："><a href="#Docker：" class="headerlink" title="Docker："></a>Docker：</h3><p>容器虚拟化，在宿主机上虚拟一个单独环境给软件使用，而不是虚拟一个新系统，使用更加方便，但是模拟不如虚拟机真实。</p><h3 id="VMware-ESXi："><a href="#VMware-ESXi：" class="headerlink" title="VMware ESXi："></a>VMware ESXi：</h3><p>VMware 提供的裸机虚拟化系统，不需要宿主系统，可直接运行多个虚拟机，侧重于服务器虚拟化，技术较成熟，功能也多，支持虚机系统多。</p><h3 id="VMware-Workstation："><a href="#VMware-Workstation：" class="headerlink" title="VMware Workstation："></a>VMware Workstation：</h3><p>VMware 提供的个人虚拟化软件，需要在宿主操作系统上运行软件，再于软件上运行虚拟机。</p>]]></content>
    
    
    <categories>
      
      <category>CloudComputing2022</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Cloud Computing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown doc</title>
    <link href="/2022/03/13/markdown%20doc/"/>
    <url>/2022/03/13/markdown%20doc/</url>
    
    <content type="html"><![CDATA[<p>Markdown是一种轻量级的「标记语言」。</p><h2 id="1-Markdown-com-cn-简介"><a href="#1-Markdown-com-cn-简介" class="headerlink" title="1 Markdown.com.cn 简介"></a>1 Markdown.com.cn 简介</h2><ul><li>支持自定义样式的 Markdown 编辑器</li><li>支持微信公众号、知乎和稀土掘金</li><li>点击右上方对应图标，一键复制到各平台</li></ul><h2 id="2-Markdown语法教程"><a href="#2-Markdown语法教程" class="headerlink" title="2 Markdown语法教程"></a>2 Markdown语法教程</h2><h3 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h3><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h3 id="2-2-字体"><a href="#2-2-字体" class="headerlink" title="2.2 字体"></a>2.2 字体</h3><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p><p><strong>这个是粗体</strong></p><p><em>这个是斜体</em></p><p><strong><em>这个是粗体加斜体</em></strong></p><p>~这里想用删除线~~</p><p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p><h3 id="2-3-无序列表"><a href="#2-3-无序列表" class="headerlink" title="2.3 无序列表"></a>2.3 无序列表</h3><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p><ul><li>无序列表 1</li><li>无序列表 2</li><li>无序列表 3</li></ul><p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p><ul><li>无序列表 1</li><li>无序列表 2<ul><li>无序列表 2.1</li><li>无序列表 2.2</li></ul></li></ul><p><strong>由于微信原因，最多支持到二级列表</strong>。</p><h3 id="2-4-有序列表"><a href="#2-4-有序列表" class="headerlink" title="2.4 有序列表"></a>2.4 有序列表</h3><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p><ol><li>有序列表 1</li><li>有序列表 2</li><li>有序列表 3</li></ol><h3 id="2-5-引用"><a href="#2-5-引用" class="headerlink" title="2.5 引用"></a>2.5 引用</h3><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p><blockquote><p>读一本好书，就是在和高尚的人谈话。 ——歌德</p><p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p></blockquote><h3 id="2-7-链接"><a href="#2-7-链接" class="headerlink" title="2.7 链接"></a>2.7 链接</h3><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p><p>对于该论述，欢迎读者查阅之前发过的文章，<a href="https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA">你是《未来世界的幸存者》么？</a><br><a id="jump_8"></a></p><h3 id="2-8-图片"><a href="#2-8-图片" class="headerlink" title="2.8 图片"></a>2.8 图片</h3><p>插入图片，格式如下：</p><p><img src="https://www.apple.com/v/apple-events/home/n/images/overview/meta/og__fodnljjkwl6y.png?202011090329" alt="这里写图片描述"></p><p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p><p><img src="http://www1.plurib.us/1shot/2007/travel_mug/travel_mug.svg" alt=""></p><p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p><p>注：支持图片 <strong><em>拖拽和截图粘贴</em></strong> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p><h3 id="2-9-分割线"><a href="#2-9-分割线" class="headerlink" title="2.9 分割线"></a>2.9 分割线</h3><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p><hr><h3 id="2-10-表格"><a href="#2-10-表格" class="headerlink" title="2.10 表格"></a>2.10 表格</h3><p>可以使用冒号来定义表格的对齐方式，如下：</p><div class="table-container"><table><thead><tr><th style="text-align:left">姓名</th><th style="text-align:center">年龄</th><th style="text-align:right">工作</th></tr></thead><tbody><tr><td style="text-align:left">小可爱</td><td style="text-align:center">18</td><td style="text-align:right">吃可爱多</td></tr><tr><td style="text-align:left">小小勇敢</td><td style="text-align:center">20</td><td style="text-align:right">爬棵勇敢树</td></tr><tr><td style="text-align:left">小小小机智</td><td style="text-align:center">22</td><td style="text-align:right">看一本机智书</td></tr></tbody></table></div><h2 id="3-特殊语法"><a href="#3-特殊语法" class="headerlink" title="3. 特殊语法"></a>3. 特殊语法</h2><h3 id="3-1-脚注"><a href="#3-1-脚注" class="headerlink" title="3.1 脚注"></a>3.1 脚注</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>脚注与链接的区别如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs markdown">链接：[<span class="hljs-string">文字</span>](<span class="hljs-link">链接</span>)<br>脚注：[<span class="hljs-string">文字</span>](<span class="hljs-link">脚注解释 &quot;脚注名字&quot;</span>)<br></code></pre></td></tr></table></figure><p>有人认为在<a href="https://en.wikipedia.org/wiki/Front-end_web_development" title="Front-end web development">大前端时代</a>的背景下，移动端开发（Android、IOS）将逐步退出历史舞台。</p><p><a href="是指掌握多种技能，并能利用多种技能独立完成产品的人。" title="什么是全栈工程师">全栈工程师</a>在业务开发流程中起到了至关重要的作用。</p><p>脚注内容请拉到最下面观看。</p><h3 id="3-2-代码块"><a href="#3-2-代码块" class="headerlink" title="3.2 代码块"></a>3.2 代码块</h3><blockquote><p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p></blockquote><p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p><p>Use the <code>printf()</code> function.</p><p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// FileName: HelloWorld.java</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloWorld</span> &#123;<br>  <span class="hljs-comment">// Java 入口程序，程序从此入口</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;Hello,World!&quot;</span>); <span class="hljs-comment">// 向控制台打印一条语句</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>支持以下语言种类：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vim">bash<br>clojure，cpp，<span class="hljs-keyword">cs</span>，css<br>dart，dockerfile, diff<br>erlang<br><span class="hljs-keyword">go</span>，gradle，groovy<br>haskell<br>java，javascript，json，julia<br>kotlin<br>lisp，<span class="hljs-keyword">lua</span><br>makefile，markdown，matlab<br>objectivec<br><span class="hljs-keyword">perl</span>，php，<span class="hljs-keyword">python</span><br>r，<span class="hljs-keyword">ruby</span>，rust<br>scala，<span class="hljs-keyword">shell</span>，sql，swift<br>tex，typescript<br>verilog，vhdl<br>xml<br>yaml<br></code></pre></td></tr></table></figure><p>如果想要更换代码高亮样式，可在上方<strong>代码主题</strong>中挑选。</p><p>其中<strong>微信代码主题与微信官方一致</strong>，有以下注意事项：</p><ul><li>带行号且不换行，代码大小与官方一致</li><li>需要在代码块处标志语言，否则无法高亮</li><li>粘贴到公众号后，用鼠标点代码块内外一次，完成高亮</li></ul><p>diff 不能同时和其他语言的高亮同时显示，且需要调整代码主题为微信代码主题以外的代码主题才能看到 diff 效果，使用效果如下:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-addition">+ 新增项</span><br><span class="hljs-deletion">- 删除项</span><br></code></pre></td></tr></table></figure><h2 id="5-致谢"><a href="#5-致谢" class="headerlink" title="5 致谢"></a>5 致谢</h2><ul><li>歌词经理 <a href="https://github.com/lyricat/wechat-format" title="灵感来源">wechat-fromat</a></li><li>颜家大少 <a href="http://md.aclickall.com/" title="MdA2All">MD2All</a></li></ul><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>Ctrl + /                启用注释 \<br>Ctrl + \                展示隐藏目录树 \<br>Ctrl + Alt + I          打开Chrome调试器\<br>Ctrl + [                向右缩进\<br>Ctrl + ]                向左缩进\<br>Shift + Home            选定光标至行首\<br>Shift + End             选定光标至行尾\<br>Ctrl + D                匹配选定下一个\<br>Alt + F3                匹配选定所有\<br>Ctrl + up               选中行上移\<br>Ctrl + down             选中行下移\<br>​</p><h3 id="目录树操作"><a href="#目录树操作" class="headerlink" title="目录树操作"></a>目录树操作</h3><p>a   添加文件\<br>d   将当前文件另存为\<br>i   显示(隐藏)版本控制忽略的文件\<br>​</p><h3 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h3><p>Alt + Ctrl + [          折叠\<br>Alt + Ctrl + ]          展开\<br>Alt + Ctrl + Shift + {  折叠全部\<br>Alt + Ctrl + Shift + }  展开全部\<br>​</p><h3 id="Markdown-写作"><a href="#Markdown-写作" class="headerlink" title="Markdown 写作"></a>Markdown 写作</h3><p>Ctrl + Shift + M        Markdown预览\<br>​</p><h3 id="Markdown-语法补全"><a href="#Markdown-语法补全" class="headerlink" title="Markdown 语法补全"></a>Markdown 语法补全</h3><p>b, legal, img, l, i, code, t, table</p>]]></content>
    
    
    <categories>
      
      <category>Markdown</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown语法教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/03/07/hello-world/"/>
    <url>/2022/03/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
